{"version":3,"sources":["components/FriendCard/index.js","components/Nav/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","onClick","handleClick","id","className","alt","name","src","image","Nav","messege","currentScore","topScore","Wrapper","children","App","state","friends","currentscore","clicked","_this","indexOf","handleIncrement","setState","concat","handleReset","console","log","newScore","length","handleShuffle","shuffledFriends","arr","i","j","Math","floor","random","_ref","shuffleFriends","_this2","this","components_Nav","components_Wrapper","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"u5DAaeA,MAVf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMJ,EAAMK,YAAYL,EAAMM,KAAKC,UAAU,QACzDN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,iBCa1BC,MAff,SAAaZ,GACX,OACEC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAII,UAAU,WACZN,EAAAC,EAAAC,cAAA,0BAEFF,EAAAC,EAAAC,cAAA,UACCH,EAAMa,QADP,aAC0Bb,EAAMc,aADhC,iBAC4Dd,EAAMe,mBCN3DC,MAJf,SAAiBhB,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWP,EAAMiB,sBCkF1BC,6MAtEbC,MAAQ,CACNC,UACAC,aAAa,EACbN,SAAS,EACTF,QAAQ,2BACRS,QAAQ,CAAC,OAGXjB,YAAc,SAAAC,IAE4B,IAApCiB,EAAKJ,MAAMG,QAAQE,QAAQlB,IAC7BiB,EAAKE,kBACLF,EAAKG,SAAS,CAAEJ,QAASC,EAAKJ,MAAMG,QAAQK,OAAOrB,MAEnDiB,EAAKK,cAEPC,QAAQC,IAAIP,EAAKJ,MAAMG,YAEzBG,gBAAkB,WAChB,IAAMM,EAAWR,EAAKJ,MAAMG,QAAQU,OACpCH,QAAQC,IAAIC,GACZR,EAAKG,SAAS,CACZZ,aAAciB,EACdlB,QAAS,UAEPkB,GAAYR,EAAKJ,MAAMJ,SACzBQ,EAAKG,SAAS,CAAEX,SAAUgB,IAEN,KAAbA,GACPR,EAAKG,SAAS,CAAEb,QAAS,kCAE3BU,EAAKU,mBAEPL,YAAc,WACZL,EAAKG,SAAS,CACZZ,aAAc,EACdC,SAAUQ,EAAKJ,MAAMJ,SACrBF,QAAS,QACTS,QAAS,KAEXC,EAAKU,mBAEPA,cAAgB,WACd,IAAIC,EArDR,SAAwBC,GACtB,IAAK,IAAIC,EAAID,EAAIH,OAAS,EAAGI,EAAI,EAAGA,IAAK,CACvC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADDK,EAEpB,CAACN,EAAIE,GAAIF,EAAIC,IAA/BD,EAAIC,GAFkCK,EAAA,GAE9BN,EAAIE,GAF0BI,EAAA,GAIzC,OAAON,EAgDiBO,CAAetB,GACrCG,EAAKG,SAAS,CAAEN,QAASc,6EAIlB,IAAAS,EAAAC,KAEP,OACE3C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0C,EAAD,CACAhC,QAAS+B,KAAKzB,MAAMN,QACpBC,aAAc8B,KAAKzB,MAAML,aAAcC,SAAU6B,KAAKzB,MAAMJ,WAC5Dd,EAAAC,EAAAC,cAAC2C,EAAD,KACGF,KAAKzB,MAAMC,QAAQ2B,IAAI,SAAAC,GAAM,OAC5B/C,EAAAC,EAAAC,cAAC8C,EAAD,CACA5C,YAAasC,EAAKtC,YAChBC,GAAI0C,EAAO1C,GACX4C,IAAKF,EAAO1C,GACZK,MAAOqC,EAAOrC,mBA/DRwC,mBCTlBC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ed0cac7e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div onClick={() => props.handleClick(props.id)} className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\n// Component for the Navbar\n\nfunction Nav(props) {\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li className=\"navname\">\n          <h6 >Clicky Game</h6>\n        </li>\n        <li>\n        {props.messege} | Score: {props.currentScore} | Top Score: {props.topScore}\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\n\nfunction shuffleFriends(arr) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n};\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    currentscore:0,\n    topScore:0,\n    messege:\"Click any image to start\",\n    clicked:[13]\n  };\n \n  handleClick = id => {\n    // if the Id is not available in the clicked array increase score\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n    console.log(this.state.clicked)\n  };\n  handleIncrement = () => {\n    const newScore = this.state.clicked.length;\n    console.log(newScore)\n    this.setState({\n      currentScore: newScore,\n      messege: \"Yes! \"\n    });\n    if (newScore >= this.state.topScore) {\n      this.setState({ topScore: newScore });\n    }\n    else if (newScore === 12) {\n      this.setState({ messege: \"You Guessed all 12 ! You win!\" });\n    }\n    this.handleShuffle();\n  };\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      messege: \"Sorry\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n  handleShuffle = () => {\n    let shuffledFriends = shuffleFriends(friends);\n    this.setState({ friends: shuffledFriends });\n  };\n  \n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    \n    return (\n      <div>\n      <Nav \n      messege={this.state.messege}\n      currentScore={this.state.currentScore} topScore={this.state.topScore} />\n      <Wrapper>\n        {this.state.friends.map(friend => (\n          <FriendCard\n          handleClick={this.handleClick}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}